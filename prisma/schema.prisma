generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  goals         Goal[]
  tasks         Task[]
  habits        Habit[]
  journalEntries JournalEntry[]
  visionBoard   VisionBoard?
}

model Goal {
  id          String    @id @default(cuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime?
  status      String
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  milestones  Milestone[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Milestone {
  id          String    @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?
  status      String
  goalId      String
  goal        Goal      @relation(fields: [goalId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?
  status      String
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Habit {
  id          String    @id @default(cuid())
  title       String
  description String?
  frequency   String
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model JournalEntry {
  id        String   @id @default(cuid())
  content   String
  mood      String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VisionBoard {
  id        String   @id @default(cuid())
  items     Json
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}